	CREATE OR REPLACE FUNCTION script_creation_menus_ecrans() RETURNS INT AS
$$
DECLARE
output_result INTEGER = 1;
tableliste_ident INTEGER = 0;

BEGIN

	-- Menus Abonnement service ATM
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Abt') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Abt', maketraductionlangsyst('Gestion des abonnements ATM'), 'Gen-9', 5, 11, true, 13, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Abt-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Abt-1', maketraductionlangsyst('Liste des abonnements ATM'), 'Abt', 6, 1, false, 13, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Abt-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable)	VALUES ('Abt-2', maketraductionlangsyst('Inscripton abonnement'), 'Abt', 6, 2, false, 13, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Abt-3') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Abt-3', maketraductionlangsyst('Modification abonnement'), 'Abt', 6, 3, false, 13, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Abt-4') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Abt-4', maketraductionlangsyst('Confirmation abonnement'), 'Abt', 6, 4, false, 13, false);
	END IF;


	-- Ecrans
	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Abt-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Abt-1', 'modules/clients/abonnement_atm.php', 'Abt-1', 13);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Abt-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Abt-2', 'modules/clients/abonnement_atm.php', 'Abt-2', 13);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Abt-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Abt-3', 'modules/clients/abonnement_atm.php', 'Abt-3', 13);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Abt-4') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Abt-4', 'modules/clients/abonnement_atm.php', 'Abt-4', 13);
	END IF;


	-- Menus Commande de carte ATM
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Caa') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Caa', maketraductionlangsyst('Commande carte ATM'), 'Gen-4', 5, 6, true, 46, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Caa-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Caa-1', maketraductionlangsyst('Sélection compte'), 'Caa', 6, 1, false, 46, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Caa-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Caa-2', maketraductionlangsyst('Confirmation'), 'Caa', 6, 2, false, 46, false);
	END IF;


	--Ecrans
	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Caa-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Caa-1', 'modules/clients/commande_carte_atm.php', 'Caa-1', 46);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Caa-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Caa-2', 'modules/clients/commande_carte_atm.php', 'Caa-2', 46);
	END IF;


	--Creation nouveau main menu + side menus :Gestion des cartes ATM : 198
	IF NOT EXISTS (select * from menus where nom_menu = 'Gca') THEN
		--insertion code
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable)
		VALUES ('Gca', maketraductionlangsyst('Gestion des cartes ATM'), 'Gen-6', 3, 17, true, 807, true);
		RAISE NOTICE 'Main Menu created!';
	END IF;

	----------------ecrans
	IF NOT EXISTS (select * from ecrans where nom_ecran = 'Gca-1') THEN
	 --insertion code
	 INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction)
	 VALUES ('Gca-1', 'modules/guichet/gestion_carte_atm.php', 'Gca', 807);
	END IF;


	-- Menus Liste des commandes a envoyer pour impression
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Lci') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Lci', maketraductionlangsyst('Listes des commandes à envoyer pour impression'), 'Gca', 4, 1, true, 808, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Lci-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Lci-1', maketraductionlangsyst('Liste des commandes'), 'Lci', 5, 1, false, 808, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Lci-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Lci-2', maketraductionlangsyst('Export CSV'), 'Lci', 5, 2, false, 808, false);
	END IF;


	-- Ecrans Liste des commandes a envoyer pour impression
	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Lci-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Lci-1', 'modules/guichet/liste_carte_imprimer.php', 'Lci-1', 808);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Lci-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Lci-2', 'modules/guichet/liste_carte_imprimer.php', 'Lci-2', 808);
	END IF;


	-- Menus Import des cartes imprimées
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ici') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ici', maketraductionlangsyst('Liste des cartes imprimées à importer'), 'Gca', 4, 2, true, 809, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ici-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ici-1', maketraductionlangsyst('Import CSV'), 'Ici', 5, 1, false, 809, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ici-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ici-2', maketraductionlangsyst('Liste des cartes imprimées à importer'), 'Ici', 5, 2, false, 809, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ici-3') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ici-3', maketraductionlangsyst('Confirmation des cartes imprimées'), 'Ici', 5, 3, false, 809, false);
	END IF;


	-- Ecrans Liste des commandes a envoyer pour impression
	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ici-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ici-1', 'modules/guichet/import_carte_imprimer.php', 'Ici-1', 809);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ici-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ici-2', 'modules/guichet/import_carte_imprimer.php', 'Ici-2', 809);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ici-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ici-3', 'modules/guichet/import_carte_imprimer.php', 'Ici-3', 809);
	END IF;



	-- Menus Historisation des imports
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Hic') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Hic', maketraductionlangsyst('Historique des commandes envoyées'), 'Gca', 4, 3, true, 810, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Hic-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Hic-1', maketraductionlangsyst('Liste exports commandes'), 'Hic', 5, 1, false, 810, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Hic-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Hic-2', maketraductionlangsyst('Export CSV'), 'Hic', 5, 2, false, 810, false);
	END IF;


	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Hic-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Hic-1', 'modules/guichet/historique_commande_export.php', 'Hic-1', 810);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Hic-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Hic-2', 'modules/guichet/historique_commande_export.php', 'Hic-1', 810);
	END IF;



		-- Menus Liste des cartes
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ldc') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ldc', maketraductionlangsyst('Liste de toutes les cartes'), 'Gca', 4, 4, true, 811, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ldc-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ldc-1', maketraductionlangsyst('Critères de recherche'), 'Ldc', 5, 1, false, 811, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Ldc-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Ldc-2', maketraductionlangsyst('Export CSV'), 'Ldc', 5, 2, false, 811, false);
	END IF;


	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ldc-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ldc-1', 'modules/guichet/liste_all_cartes.php', 'Ldc-1', 811);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ldc-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ldc-2', 'modules/guichet/liste_all_cartes.php', 'Ldc-2', 811);
	END IF;

		IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Ldc-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Ldc-3', 'modules/guichet/liste_all_cartes.php', 'Ldc-2', 811);
	END IF;



	-- Menus Retrait de carte ATM
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rct') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rct', maketraductionlangsyst('Retrait carte ATM'), 'Gen-4', 5, 7, true, 47, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rct-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rct-1', maketraductionlangsyst('Sélection compte'), 'Rct', 6, 1, false, 47, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rct-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rct-2', maketraductionlangsyst('Confirmation'), 'Rct', 6, 2, false, 47, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rct-3') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rct-3', maketraductionlangsyst('Validation'), 'Rct', 6, 3, false, 47, false);
	END IF;


	--Ecrans
	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rct-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rct-1', 'modules/clients/retrait_carte_atm.php', 'Rct-1', 47);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rct-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rct-2', 'modules/clients/retrait_carte_atm.php', 'Rct-2', 47);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rct-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rct-3', 'modules/clients/retrait_carte_atm.php', 'Rct-3', 47);
	END IF;


	-- Menus gestion des cartes suspendues et desactives
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Gcs') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Gcs', maketraductionlangsyst('Gestion des cartes suspendues/désactivées'), 'Gen-4', 5, 8, true, 48, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Gcs-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Gcs-1', maketraductionlangsyst('Liste des cartes'), 'Gcs', 6, 1, false, 48, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Gcs-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Gcs-2', maketraductionlangsyst('Details cartes'), 'Gcs', 6, 2, false, 48, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Gcs-3') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Gcs-3', maketraductionlangsyst('Confirmation carte'), 'Gcs', 6, 3, false, 48, false);
	END IF;



	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Gcs-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Gcs-1', 'modules/clients/gestion_carte_suspendues_desactivees.php', 'Gcs-1', 48);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Gcs-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Gcs-2', 'modules/clients/gestion_carte_suspendues_desactivees.php', 'Gcs-2', 48);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Gcs-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Gcs-3', 'modules/clients/gestion_carte_suspendues_desactivees.php', 'Gcs-3', 48);
	END IF;

	-- Menus Rapports
	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rat') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rat', maketraductionlangsyst('Liste des rapports ATM'), 'Gca', 4, 5, true, 812, true);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rat-1') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rat-1', maketraductionlangsyst('Choix rapports'), 'Rat', 5, 1, false, 812, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rat-2') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rat-2', maketraductionlangsyst('Personnalisation rapport'), 'Rat', 5, 2, false, 812, false);
	END IF;

	IF NOT EXISTS(SELECT nom_menu FROM menus WHERE nom_menu='Rat-3') THEN
		INSERT INTO menus (nom_menu, libel_menu, nom_pere, pos_hierarch, ordre, is_menu,fonction, is_cliquable) VALUES ('Rat-3', maketraductionlangsyst('Export données'), 'Rat', 5, 3, false, 812, false);
	END IF;



	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rat-1') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rat-1', 'modules/guichet/rapport_atm.php', 'Rat-1', 812);
	END IF;

	IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rat-2') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rat-2', 'modules/guichet/rapport_atm.php', 'Rat-2', 812);
	END IF;

		IF NOT EXISTS (SELECT nom_ecran FROM ecrans WHERE nom_ecran='Rat-3') THEN
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction) VALUES ('Rat-3', 'modules/guichet/rapport_atm.php', 'Rat-2', 812);
	END IF;




	RETURN output_result;

END;
$$
LANGUAGE plpgsql;

SELECT script_creation_menus_ecrans();
DROP FUNCTION script_creation_menus_ecrans();


--------------------------------------------------------Debut Ticket ticket_AT_169----------------------------------------------
CREATE OR REPLACE FUNCTION script_creation_table()
  RETURNS INT AS
$$
DECLARE
output_result INTEGER := 1;
tableliste_ident INTEGER :=0;
d_tableliste_str INTEGER :=0;

BEGIN

IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'ad_carte_atm') THEN

create table ad_carte_atm
(	id_carte serial NOT NULL,
	ref_no varchar(250),
	id_client integer,
	id_prestataire integer,
	id_cpte integer,
	nom_sur_carte text,
	etat_carte integer,
	num_carte_atm varchar(250),
	motif_demande	integer,
	date_carte_debut_validite	timestamp without time zone,
	date_carte_expiration	timestamp without time zone,
	date_demande	timestamp without time zone,
	date_envoi_impression	timestamp without time zone,
	date_livraison	timestamp without time zone,
	date_activation	timestamp without time zone,
	date_suspension	timestamp without time zone,
	motif_suspension	integer,
	date_desactivation	timestamp without time zone,
	id_ag	integer,
	id_export	integer,
	id_import	integer,
	date_creation	timestamp without time zone,
	date_modif	timestamp without time zone,
	CONSTRAINT ad_carte_atm_id_pkey PRIMARY KEY (id_carte, id_ag),
	CONSTRAINT ad_carte_atm_id_client_fkey FOREIGN KEY (id_client,id_ag) REFERENCES ad_cli (id_client,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT ad_carte_atm_id_cpte_fkey FOREIGN KEY (id_cpte,id_ag) REFERENCES ad_cpt (id_cpte,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION
	);

END IF;


IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'ad_carte_atm_his') THEN

create table ad_carte_atm_his (
	id	serial NOT NULL,
	id_carte	integer,
	etat_carte	integer,
	date_etat	timestamp without time zone,
	commentaires	text,
	id_ag	integer,
	date_creation	timestamp without time zone,
	CONSTRAINT ad_carte_atm_his_id_pkey PRIMARY KEY (id, id_ag),
	CONSTRAINT ad_carte_atm_his_id_carte_fkey FOREIGN KEY (id_carte,id_ag) REFERENCES ad_carte_atm (id_carte,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION
	);
END IF;

IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'ad_commande_carte_his') THEN
create table ad_commande_carte_his (
	id	serial NOT NULL,
	type	integer,
	date_traitement	timestamp without time zone,
	nom_interne	varchar(250),
	chemin_fichier	text,
	nbre_cartes	integer,
	ref_externe	text,
	id_ag	integer,
	id_his integer,
	date_creation	timestamp without time zone,
	CONSTRAINT ad_commande_carte_his_id_pkey PRIMARY KEY (id, id_ag)
	);
END IF;



IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'ad_transactions_atm_his') THEN
create table ad_transactions_atm_his (
	id	serial NOT NULL,
	id_carte	integer,
	id_client	integer,
	date_comptable	timestamp without time zone,
	compte_comptable	varchar(250),
	cpte_interne_cli	integer,
	montant	numeric(30,0),
	id_mouvement	text,
	id_his	integer,
	sens	varchar(250),
	devise	text,
	type_operation	integer,
	libel_ecriture	integer,
	id_ag	integer,
	date_creation	timestamp without time zone,
	CONSTRAINT ad_transactions_atm_his_id_pkey PRIMARY KEY (id, id_ag),
	CONSTRAINT ad_transactions_atm_his_id_carte_fkey FOREIGN KEY (id_carte,id_ag) REFERENCES ad_carte_atm (id_carte,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT ad_transactions_atm_his_id_client_fkey FOREIGN KEY (id_client,id_ag) REFERENCES ad_cli (id_client,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION
	);
END IF;

IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'ad_abonnement_atm') THEN
create table ad_abonnement_atm (
	id_abonnement	serial NOT NULL,
	id_cpte	integer,
	id_client	integer,
	identifiant_client	varchar(250),
	id_carte	integer	,
	num_carte_atm	varchar(250),
	statut	integer	,
	id_ag	integer	,
	date_creation	timestamp without time zone	,
	date_modif	timestamp without time zone,
	CONSTRAINT ad_abonnement_atm_id_pkey PRIMARY KEY (id_abonnement, id_ag),
	CONSTRAINT ad_abonnement_atm_id_cpte_fkey FOREIGN KEY (id_cpte,id_ag) REFERENCES ad_cpt (id_cpte,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT ad_abonnement_atm_id_client_fkey FOREIGN KEY (id_client,id_ag) REFERENCES ad_cli (id_client,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
	CONSTRAINT ad_abonnement_atm_id_carte_fkey FOREIGN KEY (id_carte,id_ag) REFERENCES ad_carte_atm (id_carte,id_ag) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION
	);
END IF;

-- column type_prestataire
IF NOT EXISTS(SELECT * FROM information_schema.columns WHERE table_name = 'ad_ewallet' AND column_name = 'type_prestataire') THEN
	ALTER TABLE ad_ewallet ADD COLUMN type_prestataire integer;
	select INTO tableliste_ident ident from tableliste where nomc like 'ad_ewallet' order by ident desc limit 1;
	d_tableliste_str := makeTraductionLangSyst('Type prestataire');
	INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident, 'type_prestataire', d_tableliste_str, true,null, 'int', NULL, NULL, false);
	IF EXISTS(SELECT langue FROM adsys_langues_systeme WHERE code = 'en_GB') THEN
		INSERT INTO ad_traductions VALUES (d_tableliste_str,'en_GB','Type of operator');
	END IF;
END IF;



-- Function: trig_insert_ad_carte_atm_his()

-- DROP FUNCTION trig_insert_ad_carte_atm_his();

CREATE OR REPLACE FUNCTION trig_insert_ad_carte_atm_his()
  RETURNS trigger AS
$BODY$
  BEGIN
    IF (OLD.etat_carte != NEW.etat_carte) THEN
		INSERT INTO ad_carte_atm_his (date_etat, id_carte, etat_carte, id_ag, date_creation)
		VALUES (NOW(), OLD.id_carte, OLD.etat_carte, OLD.id_ag, NOW());
	END IF;
    RETURN NEW;
  END;
	$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION trig_insert_ad_carte_atm_his()
  OWNER TO postgres;


CREATE TRIGGER trig_before_update_ad_carte_atm
  BEFORE UPDATE
  ON ad_carte_atm
  FOR EACH ROW
  EXECUTE PROCEDURE trig_insert_ad_carte_atm_his();

	RETURN output_result;

END;
$$
LANGUAGE plpgsql;

SELECT script_creation_table();
DROP FUNCTION script_creation_table();



  CREATE OR REPLACE FUNCTION update_mobile_banking_bswitch()
  RETURNS INT AS
$$
DECLARE
  output_result    INTEGER = 1;
  tableliste_ident INTEGER = 0;
BEGIN
  RAISE NOTICE 'START';

  IF NOT EXISTS(SELECT *
                FROM ad_ewallet
                WHERE nom_prestataire = 'BSWTICH' AND code_prestataire = 'BSWITCH_BI' AND id_ag = numagc())
  THEN
    INSERT INTO ad_ewallet (id_prestataire, id_ag, nom_prestataire, code_prestataire, compte_comptable)
    VALUES (4, numagc(), 'BSWITCH', 'BSWITCH_BI', NULL);
    output_result := 2;
  END IF;

 IF NOT EXISTS(SELECT *
                FROM ad_ewallet
                WHERE nom_prestataire = 'MTN' AND code_prestataire = 'MTN_RW' AND id_ag = numagc())
  THEN
  UPDATE ad_ewallet SET type_prestataire = 1 WHERE nom_prestataire = 'MTN' AND code_prestataire = 'MTN_RW';
  END IF;

  IF NOT EXISTS(SELECT *
                FROM ad_ewallet
                WHERE nom_prestataire = 'Airtel' AND code_prestataire = 'AIRTEL_RW' AND id_ag = numagc())
  THEN
  UPDATE ad_ewallet SET type_prestataire = 1 WHERE nom_prestataire = 'Airtel' AND code_prestataire = 'AIRTEL_RW';
  END IF;


   RAISE NOTICE 'END';
  RETURN output_result;

END;
$$
LANGUAGE plpgsql;

SELECT update_mobile_banking_bswitch();
DROP FUNCTION update_mobile_banking_bswitch();



CREATE OR REPLACE FUNCTION script_operation_compta() RETURNS INT AS
$$
DECLARE
output_result INTEGER = 1;
tableliste_ident INTEGER = 0;

BEGIN

	-- Création opération Frais activation abonnement ATM
	IF NOT EXISTS(SELECT * FROM ad_cpt_ope WHERE type_operation=189 AND categorie_ope = 1 AND id_ag = numagc()) THEN
		-- Frais activation abonnement ATM
		INSERT INTO ad_cpt_ope(type_operation, categorie_ope, id_ag, libel_ope)
		VALUES (189, 1, numagc(), maketraductionlangsyst('Frais activation abonnement ATM'));

		RAISE NOTICE 'Insertion type_operation 189 dans la table ad_cpt_ope effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=189 AND sens = 'd' AND categorie_cpte = 1 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (189, NULL, 'd', 1, numagc());

		RAISE NOTICE 'Insertion type_operation 189 sens ''d'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=189 AND sens = 'c' AND categorie_cpte = 0 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (189, NULL, 'c', 0, numagc());

		RAISE NOTICE 'Insertion type_operation 189 sens ''c'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;

		-- Création opération Frais transaction ATM
	IF NOT EXISTS(SELECT * FROM ad_cpt_ope WHERE type_operation=190 AND categorie_ope = 1 AND id_ag = numagc()) THEN
		-- Frais transaction ATM
		INSERT INTO ad_cpt_ope(type_operation, categorie_ope, id_ag, libel_ope)
		VALUES (190, 1, numagc(), maketraductionlangsyst('Frais transaction ATM'));

		RAISE NOTICE 'Insertion type_operation 190 dans la table ad_cpt_ope effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=190 AND sens = 'd' AND categorie_cpte = 1 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (190, NULL, 'd', 1, numagc());

		RAISE NOTICE 'Insertion type_operation 190 sens ''d'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=190 AND sens = 'c' AND categorie_cpte = 0 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (190, NULL, 'c', 0, numagc());

		RAISE NOTICE 'Insertion type_operation 190 sens ''c'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;


		-- Création opération Retrait ATM
	IF NOT EXISTS(SELECT * FROM ad_cpt_ope WHERE type_operation=191 AND categorie_ope = 1 AND id_ag = numagc()) THEN
		-- Retrait ATM
		INSERT INTO ad_cpt_ope(type_operation, categorie_ope, id_ag, libel_ope)
		VALUES (191, 1, numagc(), maketraductionlangsyst('Retrait ATM'));

		RAISE NOTICE 'Insertion type_operation 191 dans la table ad_cpt_ope effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=191 AND sens = 'd' AND categorie_cpte = 1 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (191, NULL, 'd', 1, numagc());

		RAISE NOTICE 'Insertion type_operation 191 sens ''d'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;

	IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=191 AND sens = 'c' AND categorie_cpte = 28 AND id_ag = numagc()) THEN
		INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (191, NULL, 'c', 28, numagc());

		RAISE NOTICE 'Insertion type_operation 191 sens ''c'' dans la table ad_cpt_ope_cptes effectuée';
		output_result := 2;
	END IF;



	IF NOT EXISTS(SELECT * FROM ad_cpt_ope WHERE type_operation=192 AND categorie_ope = 1 AND id_ag = numagc()) THEN
    -- Revirement ATM
    INSERT INTO ad_cpt_ope(type_operation, categorie_ope, id_ag, libel_ope) VALUES (192, 1, numagc(), maketraductionlangsyst('Revirement ATM'));

    RAISE NOTICE 'Insertion type_operation 192 dans la table ad_cpt_ope effectuée';
    output_result := 2;
  END IF;

  IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=192 AND sens = 'd' AND categorie_cpte = 28 AND id_ag = numagc()) THEN
    INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (192, NULL, 'd', 28, numagc());

    RAISE NOTICE 'Insertion type_operation 192 sens ''d'' dans la table ad_cpt_ope_cptes effectuée';
    output_result := 2;
  END IF;

  IF NOT EXISTS(SELECT * FROM ad_cpt_ope_cptes WHERE type_operation=192 AND sens = 'c' AND categorie_cpte = 1 AND id_ag = numagc()) THEN
    INSERT INTO ad_cpt_ope_cptes(type_operation, num_cpte, sens, categorie_cpte, id_ag) VALUES (192, NULL, 'c', 1, numagc());

    RAISE NOTICE 'Insertion type_operation 192 sens ''c'' dans la table ad_cpt_ope_cptes effectuée';
    output_result := 2;
  END IF;

	-- Insertion dans la table tarification : Frais abonnement ATM
	  --Creation du frais
	  INSERT INTO adsys_tarification (id_tarification, code_abonnement, type_de_frais, mode_frais, valeur, compte_comptable, date_debut_validite, date_fin_validite, statut, id_ag) VALUES (15, 'atm', 'ATM_REG', '1', '0', null, null, null, 't', numagc());

	  RAISE NOTICE 'Insertion type_frais SMS_FRAIS dans la table adsys_tarification effectuée';


	-- Insertion dans la table tarification : Frais activation service ATM
	  	  --Creation du frais
	  INSERT INTO adsys_tarification (id_tarification, code_abonnement, type_de_frais, mode_frais, valeur, compte_comptable, date_debut_validite, date_fin_validite, statut, id_ag) VALUES (16, 'atm', 'ATM_TSC', '1', '0', null, null, null, 't', numagc());

	  RAISE NOTICE 'Insertion type_frais SMS_FRAIS dans la table adsys_tarification effectuée';


	RETURN output_result;

END;
$$
LANGUAGE plpgsql;

SELECT script_operation_compta();
DROP FUNCTION script_operation_compta();



/****************************************Partie FUSION************************************************************************************/
CREATE OR REPLACE FUNCTION update_fusion()
  RETURNS INT AS
$$
DECLARE
  output_result    INTEGER = 1;
  tableliste_ident_niveau INTEGER = 0;
  tableliste_ident_client INTEGER = 0;
  tableliste_ident_log INTEGER = 0;
  id_str_trad INTEGER = 0;
  tablen_id INTEGER = 0;
BEGIN

	IF NOT EXISTS(SELECT * FROM information_schema.tables WHERE table_name = 'adsys_niveau_fenacobu') THEN

	   CREATE TABLE adsys_niveau_fenacobu
	(
	  id serial NOT NULL,
	  libelle_niveau text,
	  type_niveau integer,
	  parent integer,
	  id_ag integer,
	  CONSTRAINT adsys_niveau_fenacobu_pkey PRIMARY KEY (id, id_ag)
	);

	END IF;

		  -- Insertion dans tableliste
	IF NOT EXISTS(SELECT * FROM tableliste WHERE nomc = 'adsys_niveau_fenacobu') THEN
		INSERT INTO tableliste VALUES ((select max(ident) from tableliste)+1, 'adsys_niveau_fenacobu', makeTraductionLangSyst('"Paramétrage des niveaux agences FENACOBU"'), true);
		RAISE NOTICE 'Données table adsys_niveau_fenacobu rajoutés dans table tableliste';
	END IF;

	tableliste_ident_niveau := (select ident from tableliste where nomc like 'adsys_niveau_fenacobu' order by ident desc limit 1);

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'libelle_niveau' and tablen = tableliste_ident_niveau) THEN
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_niveau, 'libelle_niveau', makeTraductionLangSyst('Libelle niveau'), true, NULL, 'txt', true, null, false);
	END IF;

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'type_niveau' and tablen = tableliste_ident_niveau) THEN
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_niveau, 'type_niveau', makeTraductionLangSyst('Type niveau'), false, NULL, 'int', false, false, false);
	END IF;

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'parent' and tablen = tableliste_ident_niveau) THEN
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_niveau, 'parent', makeTraductionLangSyst('Parent'), false, NULL, 'int', false, false, false);
	END IF;

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'id' and tablen = tableliste_ident_niveau) THEN
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_niveau, 'id', makeTraductionLangSyst('Id localisation'), true, NULL, 'int', null, true, false);
	END IF;

	IF NOT EXISTS (select * from ecrans where nom_ecran = 'Lob-1') THEN
		--insertion code
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction)
		VALUES ('Lob-1', 'modules/parametrage/tables.php', 'Pta', 292);
		RAISE NOTICE 'Ecran 1 created!';
	END IF;

	IF NOT EXISTS (select * from ecrans where nom_ecran = 'Lob-2') THEN
		--insertion code
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction)
		VALUES ('Lob-2', 'modules/parametrage/tables.php', 'Pta', 292);
		RAISE NOTICE 'Ecran 1 created!';
	END IF;

	IF NOT EXISTS (select * from ecrans where nom_ecran = 'Lob-3') THEN
		--insertion code
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction)
		VALUES ('Lob-3', 'modules/parametrage/tables.php', 'Pta', 292);
		RAISE NOTICE 'Ecran 1 created!';
	END IF;


	tableliste_ident_client := (select ident from tableliste where nomc like 'ad_cli' order by ident desc limit 1);

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'n_agence' and tablen = tableliste_ident_client) THEN
	  ALTER TABLE ad_cli ADD n_agence INTEGER;
	  d_tableliste_str := makeTraductionLangSyst('Agence');
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_client, 'n_agence', d_tableliste_str, true, (SELECT ident from d_tableliste where tablen = tableliste_ident_niveau and nchmpc = 'id'), 'int', true, false, false);
	END IF;

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'n_guichet' and tablen = tableliste_ident_client) THEN
	  ALTER TABLE ad_cli ADD n_guichet INTEGER;
	  d_tableliste_str := makeTraductionLangSyst('Guichet');
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_client, 'n_guichet', d_tableliste_str, true, (SELECT ident from d_tableliste where tablen = tableliste_ident_niveau and nchmpc = 'id'), 'int', true, false, false);
	END IF;

	tableliste_ident_log := (select ident from tableliste where nomc like 'ad_log' order by ident desc limit 1);

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'n_agence' and tablen = tableliste_ident_log) THEN
	  ALTER TABLE ad_log ADD n_agence INTEGER;
	  d_tableliste_str := makeTraductionLangSyst('Agence');
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_log, 'n_agence', d_tableliste_str, true, (SELECT ident from d_tableliste where tablen = tableliste_ident_niveau and nchmpc = 'id'), 'int', true, false, false);
	END IF;

	IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'n_guichet' and tablen = tableliste_ident_log) THEN
	  ALTER TABLE ad_log ADD n_guichet INTEGER;
	  d_tableliste_str := makeTraductionLangSyst('Guichet');
	  INSERT INTO d_tableliste VALUES ((select max(ident) from d_tableliste)+1, tableliste_ident_log, 'n_guichet', d_tableliste_str, true, (SELECT ident from d_tableliste where tablen = tableliste_ident_niveau and nchmpc = 'id'), 'int', true, false, false);
	END IF;

	    id_str_trad := maketraductionlangsyst('Localisation');

    IF NOT EXISTS(SELECT * FROM tableliste WHERE nomc = 'type_niveau_fenacobu') THEN
      INSERT INTO tableliste VALUES (
      (select max(ident) from tableliste)+1,
      'type_niveau_fenacobu',
      id_str_trad,
      false);
      RAISE NOTICE 'Données table adsys_localisation_ml rajoutés dans table tableliste';
    END IF;

    tablen_id := (SELECT ident FROM tableliste WHERE nomc = 'type_niveau_fenacobu');

    IF NOT EXISTS(SELECT * FROM d_tableliste WHERE nchmpc = 'id' and tablen = tablen_id) THEN
    INSERT INTO d_tableliste VALUES ((select max(ident)
    from d_tableliste)+1, tablen_id, 'id', makeTraductionLangSyst('Id'), TRUE, NULL, 'int', NULL, TRUE, FALSE);
    END IF;


	--insertion ecran intermediaire pour filtrer les niveaux : ajout ecran Ich-5
	IF NOT EXISTS (select * from ecrans where nom_ecran = 'Ich-5') THEN
		--insertion code
		INSERT INTO ecrans(nom_ecran, fichier, nom_menu, fonction)
		VALUES ('Ich-5', 'modules/guichet/chequier_imprimer.php', 'Ich', 191);
		RAISE NOTICE 'Ecran 1 created!';
	END IF;



RETURN output_result;

END;
$$
LANGUAGE plpgsql;

SELECT update_fusion();
DROP FUNCTION update_fusion();
